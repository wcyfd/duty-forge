
package com.aim.duty.duty_forge.ui;

import java.awt.EventQueue;
import java.util.Map;

import com.aim.duty.duty_base.cache.config.FuelConfigCache;
import com.aim.duty.duty_base.cache.config.MagicConfigCache;
import com.aim.duty.duty_base.cache.config.MineConfigCache;
import com.aim.duty.duty_base.cache.config.Shape1ConfigCache;
import com.aim.duty.duty_base.cache.config.Shape2ConfigCache;
import com.aim.duty.duty_base.cache.config.Shape3ConfigCache;
import com.aim.duty.duty_base.entity.bo.Equip;
import com.aim.duty.duty_base.entity.bo.Furnace;
import com.aim.duty.duty_base.entity.config.MagicConfig;
import com.aim.duty.duty_base.entity.config.MineConfig;
import com.aim.duty.duty_base.entity.config.Shape1Config;
import com.aim.duty.duty_base.entity.config.Shape2Config;
import com.aim.duty.duty_base.entity.config.Shape3Config;
import com.aim.duty.duty_forge.cache.ConstantCache;
import com.aim.duty.duty_forge.cache.EquipCache;

public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
	 */
	public MainFrame() {
		initComponents();
		initCode();
	}

	private void initCode() {
		// TODO Auto-generated method stub
		buringText = burningJLabel.getText();
		readyBurnCountText = readtBurnCountJLabel.getText();
		readyBurnText = readyBurnJLabel.getText();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		shape1JComboBox = new javax.swing.JComboBox();
		jLabel2 = new javax.swing.JLabel();
		shape2JComboBox = new javax.swing.JComboBox();
		jLabel3 = new javax.swing.JLabel();
		shape3JComboBox = new javax.swing.JComboBox();
		jLabel4 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		mineJList = new javax.swing.JList();
		jLabel5 = new javax.swing.JLabel();
		jScrollPane2 = new javax.swing.JScrollPane();
		materialJList = new javax.swing.JList();
		jLabel6 = new javax.swing.JLabel();
		jScrollPane3 = new javax.swing.JScrollPane();
		magicJList = new javax.swing.JList();
		jScrollPane4 = new javax.swing.JScrollPane();
		equipAttributeTextArea = new javax.swing.JTextArea();
		createEquipJButton = new javax.swing.JButton();
		materialJButton = new javax.swing.JButton();
		magicJButton = new javax.swing.JButton();
		hit1JButton = new javax.swing.JButton();
		hit2JButton = new javax.swing.JButton();
		hit3JButton = new javax.swing.JButton();
		jLabel7 = new javax.swing.JLabel();
		temperatureJLabel = new javax.swing.JLabel();
		sharpButton = new javax.swing.JButton();
		jScrollPane5 = new javax.swing.JScrollPane();
		storeTextArea = new javax.swing.JTextArea();
		jLabel9 = new javax.swing.JLabel();
		burningJLabel = new javax.swing.JLabel();
		readyBurnJLabel = new javax.swing.JLabel();
		readtBurnCountJLabel = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

		jLabel1.setText("刀刃");

		shape1JComboBox.setModel(new javax.swing.DefaultComboBoxModel(Shape1ConfigCache.shape1NameVector));

		jLabel2.setText("护手");

		shape2JComboBox.setModel(new javax.swing.DefaultComboBoxModel(Shape2ConfigCache.shape2NameVector));

		jLabel3.setText("刀柄");

		shape3JComboBox.setModel(new javax.swing.DefaultComboBoxModel(Shape3ConfigCache.shape3NameVector));

		jLabel4.setText("矿石");

		mineJList.setModel(new javax.swing.AbstractListModel() {
			public int getSize() {
				return MineConfigCache.mineNameVector.size();
			}

			public Object getElementAt(int i) {
				return MineConfigCache.mineNameVector.get(i);
			}
		});
		jScrollPane1.setViewportView(mineJList);

		jLabel5.setText("燃料");

		materialJList.setModel(new javax.swing.AbstractListModel() {
			public int getSize() {
				return FuelConfigCache.fuelNameVector.size();
			}

			public Object getElementAt(int i) {
				return FuelConfigCache.fuelNameVector.get(i);
			}
		});
		jScrollPane2.setViewportView(materialJList);

		jLabel6.setText("魔法");

		magicJList.setModel(new javax.swing.AbstractListModel() {
			public int getSize() {
				return MagicConfigCache.magicNameVector.size();
			}

			public Object getElementAt(int i) {
				return MagicConfigCache.magicNameVector.get(i);
			}
		});
		jScrollPane3.setViewportView(magicJList);

		equipAttributeTextArea.setColumns(20);
		equipAttributeTextArea.setFont(new java.awt.Font("Monospaced", 0, 10));
		equipAttributeTextArea.setLineWrap(true);
		equipAttributeTextArea.setRows(5);
		jScrollPane4.setViewportView(equipAttributeTextArea);

		createEquipJButton.setText("create");
		createEquipJButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				createEquipJButtonActionPerformed(evt);
			}
		});

		materialJButton.setText("add");
		materialJButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				materialJButtonActionPerformed(evt);
			}
		});

		magicJButton.setText("add");
		magicJButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				magicJButtonActionPerformed(evt);
			}
		});

		hit1JButton.setText("hit1");
		hit1JButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				hit1JButtonActionPerformed(evt);
			}
		});

		hit2JButton.setText("hit2");
		hit2JButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				hit2JButtonActionPerformed(evt);
			}
		});

		hit3JButton.setText("hit3");
		hit3JButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				hit3JButtonActionPerformed(evt);
			}
		});

		jLabel7.setText("温度：");

		temperatureJLabel.setText("0");

		sharpButton.setText("开封");
		sharpButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				sharpButtonActionPerformed(evt);
			}
		});

		storeTextArea.setColumns(20);
		storeTextArea.setLineWrap(true);
		storeTextArea.setRows(5);
		jScrollPane5.setViewportView(storeTextArea);

		jLabel9.setText("仓库");

		burningJLabel.setText("正在燃烧材料：");

		readyBurnJLabel.setText("准备燃烧材料：");

		readtBurnCountJLabel.setText("准备燃烧材料数量：");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(shape2JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hit2JButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(shape1JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hit1JButton))
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(burningJLabel))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(shape3JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(hit3JButton))
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(readyBurnJLabel)
                                    .addComponent(readtBurnCountJLabel))))
                        .addGap(38, 229, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(createEquipJButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(materialJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(magicJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(sharpButton))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jLabel6))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(temperatureJLabel)))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane5)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7)
                            .addComponent(temperatureJLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shape1JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hit1JButton)
                            .addComponent(burningJLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shape2JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hit2JButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(readyBurnJLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(shape3JComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hit3JButton)
                            .addComponent(readtBurnCountJLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9)))
                    .addComponent(jScrollPane4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createEquipJButton)
                    .addComponent(materialJButton)
                    .addComponent(magicJButton)
                    .addComponent(sharpButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
	}// </editor-fold>

	private void hit1JButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		Furnace forge = ConstantCache.forge;
		ConstantCache.service.hit(forge,  1);
		EventQueue.invokeLater(printRunnable);
	}

	private void hit2JButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		Furnace forge = ConstantCache.forge;
		ConstantCache.service.hit(forge,  2);
		EventQueue.invokeLater(printRunnable);
	}

	private void hit3JButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		Furnace forge = ConstantCache.forge;
		ConstantCache.service.hit(forge,  3);
		EventQueue.invokeLater(printRunnable);
	}

	private void createEquipJButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		int shape1Index = shape1JComboBox.getSelectedIndex();
		int shape2Index = shape2JComboBox.getSelectedIndex();
		int shape3Index = shape3JComboBox.getSelectedIndex();
		int mineIndex = mineJList.getSelectedIndex();
		if(mineIndex == -1){
			return;
		}

		Shape1Config config1 = Shape1ConfigCache.shape1Vector.get(shape1Index);
		Shape2Config config2 = Shape2ConfigCache.shape2Vector.get(shape2Index);
		Shape3Config config3 = Shape3ConfigCache.shape3Vector.get(shape3Index);
		MineConfig mineConfig = MineConfigCache.mineVector.get(mineIndex);

		ConstantCache.service.create(ConstantCache.forge, mineConfig.id, 1, config1.id, config2.id, config3.id);
		EventQueue.invokeLater(printRunnable);
	}

	private void materialJButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		int index = materialJList.getSelectedIndex();
		if (index == -1)
			return;
		int id = FuelConfigCache.fuelVector.get(index).id;
		ConstantCache.service.addFuel(ConstantCache.forge, id, 1);
	}

	private void magicJButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		int index = magicJList.getSelectedIndex();
		MagicConfig config = MagicConfigCache.magicConfigVector.get(index);
		ConstantCache.service.addMagic(ConstantCache.forge, 1, config.id);
		EventQueue.invokeLater(printRunnable);
	}

	private void sharpButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		ConstantCache.service.sharp(ConstantCache.forge);
		
		EventQueue.invokeLater(printStoreRunnable);
		EventQueue.invokeLater(printRunnable);
	}

	/**
	 * @param args
	 *            the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting
		// code (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the
		 * default look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.
		 * html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new MainFrame().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify
	private javax.swing.JLabel burningJLabel;
	private javax.swing.JButton createEquipJButton;
	private javax.swing.JTextArea equipAttributeTextArea;
	private javax.swing.JButton hit1JButton;
	private javax.swing.JButton hit2JButton;
	private javax.swing.JButton hit3JButton;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JScrollPane jScrollPane4;
	private javax.swing.JScrollPane jScrollPane5;
	private javax.swing.JButton magicJButton;
	private javax.swing.JList magicJList;
	private javax.swing.JButton materialJButton;
	private javax.swing.JList materialJList;
	private javax.swing.JList mineJList;
	private javax.swing.JLabel readtBurnCountJLabel;
	private javax.swing.JLabel readyBurnJLabel;
	private javax.swing.JComboBox shape1JComboBox;
	private javax.swing.JComboBox shape2JComboBox;
	private javax.swing.JComboBox shape3JComboBox;
	private javax.swing.JButton sharpButton;
	private javax.swing.JTextArea storeTextArea;
	private javax.swing.JLabel temperatureJLabel;

	public javax.swing.JLabel getBurningJLabel() {
		return burningJLabel;
	}

	public javax.swing.JLabel getReadtBurnCountJLabel() {
		return readtBurnCountJLabel;
	}

	public javax.swing.JLabel getReadyBurnJLabel() {
		return readyBurnJLabel;
	}

	public javax.swing.JLabel getTemperatureJLabel() {
		return temperatureJLabel;
	}

	public String buringText;
	public String readyBurnText;
	public String readyBurnCountText;
	
	private Runnable printRunnable = new Runnable() {
		
		@Override
		public void run() {
			Equip equip = ConstantCache.forge.getEquip();
			if (equip == null) {
				return;
			}
			StringBuilder sb = new StringBuilder();
			ConstantCache.service.print(sb, equip);
			equipAttributeTextArea.setText(sb.toString());
		}
	};
	
	private Runnable printStoreRunnable = new Runnable(){

		@Override
		public void run() {
			// TODO Auto-generated method stub
			StringBuilder sb = new StringBuilder();
			Map<Integer,Equip> equipMap = EquipCache.getEquipMap();
			for(Map.Entry<Integer, Equip> entrySet:equipMap.entrySet()){
				int id = entrySet.getKey();
				Equip equip = entrySet.getValue();
				sb.append("==============").append(id).append("==============").append("\n");
				ConstantCache.service.print(sb, equip);
			}
			storeTextArea.setText(sb.toString());
		}
		
	};
	// End of variables declaration
}